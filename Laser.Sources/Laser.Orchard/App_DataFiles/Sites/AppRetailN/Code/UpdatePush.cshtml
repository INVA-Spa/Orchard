@using Orchard.ContentManagement;
@using Orchard.ContentPicker.Fields;
@using Laser.Orchard.HiddenFields.Fields;
@using Laser.Orchard.Mobile.Models;
@using System.Linq;

@functions{
    // Model.ContentItem is a Push
    string retString = "Error"; //possible outcomes: Error,Ok
    string eMsg = "";
}
@{
    try {
        ContentItem push = Model.ContentItem;
        string contentType = push.ContentType;
        ContentPart part = push.Parts.FirstOrDefault(x => x.PartDefinition.Name == contentType);
        if (part != null) {
            ContentField field = part.Fields.FirstOrDefault(x => x.Name == "ContenutoCorrelato");
            if (field != null) {
                ContentPickerField cpf = field as ContentPickerField;
                MobilePushPart pushPart = push.As<MobilePushPart>();
                if (pushPart != null) {
                    ContentField pushField = pushPart.Fields.FirstOrDefault(x => x.Name == "RelatedContent");
                    if (pushField != null) {
                        ContentPickerField pushCpf = pushField as ContentPickerField;
                        pushCpf.Ids = cpf.Ids;
                    }
                }
                retString = "Ok";
            }
        }
    } catch (Exception ex) {
        eMsg += string.Format("\r\n{0}", ex.Message);
        Model.Tokens["Workflow"].SetState("ErrorMessage", eMsg);
    }
}@retString