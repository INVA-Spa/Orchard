@using Laser.Orchard.CommunicationGateway.Models;
@using Laser.Orchard.CommunicationGateway.Services;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using Orchard;
@using Orchard.ContentManagement;
@functions{
    string retString = "Error"; //possible outcomes: "Error","OK","NothingToDo"

    //Services we will need
    IContentManager _contentManager;
}
@{
    try {
        //resolve services
        _contentManager = Model.OrchardServices.WorkContext.Resolve<IContentManager>();
        //resolve content item of type SchedaInvito
        dynamic item = Model.ContentItem;
        var haPartecipato = (item.SchedaInvito.Hapartecipato.Value == null ? false:item.SchedaInvito.Hapartecipato.Value);
        if (!haPartecipato) {
            item.SchedaInvito.Hapartecipato.Value = true;
			item.VersionRecord.Published = false;
			_contentManager.Publish(item);
            retString = "OK";
        } else {
            retString = "NothingToDo";
        }
    } catch (Exception ex) {
        var eMsg = ex.Message;
        Model.Tokens["Workflow"].SetState("ErrorMessage", eMsg);
        retString = "Error";
    }
}@retString