@using Orchard.Data;
@using Orchard.ContentManagement;
@using Orchard.Projections.Models;
@using Orchard.Workflows.Models;
@functions{
    string retString = "Error"; //possible outcomes: "Error","Ok"
    WorkflowContext wfContext = null;
    IContentManager _contentManager;
}
@{
    try {
        wfContext = Model.Tokens["Workflow"];
        // resolve services
        _contentManager = Model.OrchardServices.WorkContext.Resolve<IContentManager>();
        // update fields
        var qry = _contentManager.Query(new string[] { "User", "CommunicationContact" })
            .Where<FieldIndexPartRecord>(f => f.StringFieldIndexRecords.Any(r => r.PropertyName == "ProfilePart.InStore." && r.Value != null));
        var records = qry.List();
        foreach (dynamic ci in records) {
            ci.ProfilePart.InStore.Value = null;
            ci.VersionRecord.Published = false;
            _contentManager.Publish(ci);
        }
        retString = "Ok";
    } catch (Exception ex) {
        Model.OrchardServices.TransactionManager.Logger.Log(Orchard.Logging.LogLevel.Error, ex, "Error in SvuotaUserInStore.cshtml", null);
        wfContext.SetState("ErrorMessage", ex.Message);
    }
}@retString