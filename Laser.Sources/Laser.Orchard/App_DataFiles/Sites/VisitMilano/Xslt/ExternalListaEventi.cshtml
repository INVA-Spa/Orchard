@functions{
    // used to get value from e015 format
    void GetChildValue(XmlDocument thedoc, string thepath, bool HtmlFormat = false) {
        foreach (XmlNode child_node in thedoc.SelectNodes(thepath)) {
            if (child_node != null && child_node.HasChildNodes) {
                if (child_node.SelectSingleNode("value") != null) {
                    if (HtmlFormat) {
                        child_node.InnerXml = child_node.SelectSingleNode("value").InnerXml;
                    } else {
                        if (child_node.SelectSingleNode("value").FirstChild != null) {
                            child_node.InnerXml = HttpUtility.HtmlEncode(child_node.SelectSingleNode("value").FirstChild.InnerText);
                        }
                    }
                }
            }
        }
    }

}
@{
    XmlDocument mydoc = ToXmlDocument(Model);

    XmlDocument CachedData = ViewBag.CachedData;
    //	var elementcached=ViewBag.CachedData;
    //	var venues=((object[])((Dictionary<string,object>)((Dictionary<string,object>)elementcached)["ToRemove"])["Venue"]);
    //
    //	Dictionary<string,object> myvenue =new Dictionary<string,object> ();
    //	for(Int32 i=0;i<venues.Length;i++){
    //		myvenue.Add((string)(((Dictionary<string,object>)venues[i])["Sid"]),(object)(((Dictionary<string,object>)venues[i])));
    //	}


    // aggiungo raggruppamento dei nodi event sotto un unico nodo denominato lista e rimuovo i nodi non di tipo event
    mydoc = aggiungipadre(mydoc, "root", "lista", "event");
    mydoc = RimuoviFratelli(mydoc, "/lista");

    GetChildValue(mydoc, "//event/id");
    foreach (XmlNode child_node in mydoc.SelectNodes("//event/id")) {
        XmlNode OriginalId = mydoc.CreateElement("OriginalId");
        OriginalId.InnerXml = child_node.InnerXml;
        child_node.ParentNode.AppendChild(OriginalId);
    }
    mydoc = cambianome(mydoc, "/event/id", "Sid");
    mydoc = cambianome(mydoc, "/event/id", "Sid");

    foreach (XmlNode child_node in mydoc.SelectNodes("//event/Sid")) {
        child_node.InnerText = "Event:" + child_node.InnerText;
    }

    //Hermes
    mydoc = ConvertArrayOfStringToString(mydoc, "/event", "priceInfo", "PriceInfo", true);
    GetChildValue(mydoc, "//event/name");
    mydoc = ConvertArrayOfStringToString(mydoc, "/event", "name", "Name", true);
    foreach (System.Xml.XmlNode child_node in mydoc.SelectNodes("//event")) {
        mydoc = AggiungiShareLink(mydoc, child_node, child_node.SelectSingleNode("Name") != null ? HttpUtility.HtmlEncode(child_node.SelectSingleNode("Name").InnerText) : "", "http://www.turismo.milano.it/", child_node.SelectSingleNode("mediaResource/uri") != null ? child_node.SelectSingleNode("mediaResource/uri").InnerText : "");
    }

    GetChildValue(mydoc, "//event/headline");
    GetChildValue(mydoc, "//event/descriptiontext", true);
    mydoc = ConvertArrayOfStringToString(mydoc, "/event", "descriptiontext", "Descriptiontext", true);
    GetChildValue(mydoc, "//schedule/descriptiontext", true);
    mydoc = ConvertArrayOfStringToString(mydoc, "/schedule", "descriptiontext", "Descriptiontext", true);
    GetChildValue(mydoc, "//event/abstracttext", true);
    mydoc = ConvertArrayOfStringToString(mydoc, "/event", "abstracttext", "Abstracttext", true);
    //rendi array contact
    mydoc = aggiungipadre(mydoc, "/event", "Contacts", "contact");
    mydoc = aggiungifiglio(mydoc, "/event/Contacts", "contact");
    mydoc = cambianome(mydoc, "/contact", "Contact");

    mydoc = cambianome(mydoc, "/schedule", "Schedule");
    mydoc = cambianome(mydoc, "/startEnd", "StartEnd");

    mydoc = aggiungipadre(mydoc, "/event", "MoreInfos", "moreInfo");
    mydoc = aggiungifiglio(mydoc, "/event/MoreInfos", "moreInfo");
    mydoc = cambianome(mydoc, "/moreInfo", "MoreInfo");

    //rendi array mediaResource

    GetChildValue(mydoc, "//mediaResource/name");

    string child_node_name = "";
    string child_node_uri = "";
    string child_node_mimeType = "";
    foreach (XmlNode child_node in mydoc.SelectNodes("//event/mediaResource")) {
        child_node_name = "";
        child_node_uri = "";
        child_node_mimeType = "";
        if (child_node.SelectSingleNode("name") != null) {
            child_node_name = child_node.SelectSingleNode("name").InnerXml;
        }
        if (child_node.SelectSingleNode("uri") != null) {
            child_node_uri = child_node.SelectSingleNode("uri").InnerXml;
        }
        if (child_node.SelectSingleNode("mimeType") != null) {
            child_node_mimeType = child_node.SelectSingleNode("mimeType").InnerXml;
        }
        XmlNode map = InsertImage(mydoc, child_node_uri, child_node_name, child_node_mimeType, "", "");
        child_node.ParentNode.AppendChild(map);
        child_node.ParentNode.RemoveChild(child_node);
    }


    mydoc = aggiungipadre(mydoc, "/event", "GalleryEvent", "MediaPart");
    mydoc = aggiungifiglio(mydoc, "/event/GalleryEvent", "MediaPart");
    //mydoc=aggiungipadre(mydoc,"/event","Gallery","MediaParts");

    //category
    GetChildValue(mydoc, "//event/category");
    mydoc = ConvertArrayOfStringToString(mydoc, "/event", "category", "Category");


    GetChildValue(mydoc, "//event/venueOrVenueId");
    foreach (XmlNode child_node in mydoc.SelectNodes("//event/venueOrVenueId")) {
        XmlNode FakeVenue = mydoc.CreateElement("Venue");
        XmlNode search = CachedData.SelectSingleNode("//Venue/Sid[text()='Venue:" + child_node.InnerText + "']");
        if (search != null) {
            FakeVenue.InnerXml = search.ParentNode.InnerXml;
            child_node.ParentNode.AppendChild(FakeVenue);
        }
        child_node.ParentNode.RemoveChild(child_node);
    }
    //	GetChildValue(mydoc,"//event/venueOrVenueId");
    //	foreach (XmlNode child_node in mydoc.SelectNodes("//event/venueOrVenueId")) {
    //		XmlNode FakeVenue = mydoc.CreateElement("Venue");
    //	//	var venueselezionato=allvenue.Where(x=>x.Sid=="Venue:"+child_node.InnerText);
    //		if (myvenue.ContainsKey("Venue:"+child_node.InnerText)){
    //			Dictionary<string,object> myval=(Dictionary<string,object>)myvenue["Venue:"+child_node.InnerText];
    //			if (myval!=null){
    //				FakeVenue.InnerXml=codifica(myval);
    //			}
    //			child_node.ParentNode.AppendChild(FakeVenue);
    //		}
    //		child_node.ParentNode.RemoveChild(child_node);
    //	}
    //	mydoc=aggiungipadre(mydoc,"/event","Venues","Venue");
    //	mydoc=aggiungifiglio(mydoc,"/event/Venues","Venue");

    //GetChildValue(mydoc,"//event/venueOrVenueId");
    //foreach (XmlNode child_node in mydoc.SelectNodes("//event/venueOrVenueId")) {
    //	XmlNode FakeVenue = mydoc.CreateElement("Venue");
    //	
    //	FakeVenue.InnerXml="<VenueId>fake</VenueId><name>fake</name><status>fake</status><Descriptiontext>fake</Descriptiontext><Contacts><Contact><string>fake</string><type>fake</type></Contact><Contact><string>fake2</string><type>fake2</type></Contact></Contacts><Addresses><Address><street>fake</street><city>fake</city></Address><Address><street>fake2</street><city>fake2</city></Address></Addresses><MoreInfos><MoreInfo><value>fake</value><type>fake</type></MoreInfo><MoreInfo><value>fake</value><type>fake</type></MoreInfo></MoreInfos><Geolocation><MapPart><Latitude>0</Latitude><Longitude>0</Longitude></MapPart><MapPart><Latitude>0</Latitude><Longitude>0</Longitude></MapPart></Geolocation><Gallery><MediaParts><MediaPart><Title>fake</Title><MimeType>fake</MimeType><MediaUri>fake</MediaUri></MediaPart><MediaPart><Title>fake</Title><MimeType>fake</MimeType><MediaUri>fake</MediaUri></MediaPart></MediaParts></Gallery><Category>fake</Category>";
    //	//";;
    //	child_node.ParentNode.AppendChild(FakeVenue);
    //	child_node.ParentNode.RemoveChild(child_node);
    //}
    //mydoc=aggiungipadre(mydoc,"/event","Venues","Venue");
    //mydoc=aggiungifiglio(mydoc,"/event/Venues","Venue");

    //	mydoc=ConvertArrayOfStringToString(mydoc,"/event","venueOrVenueId","VenueOrVenueId");

    mydoc = cambianome(mydoc, "/lista", "ToRemove");

    mydoc = ConvertStringTimeStampToDate(mydoc, "/startDateTime", true);
    mydoc = ConvertStringTimeStampToDate(mydoc, "/endDateTime", true);
    mydoc = rendinumeric(mydoc, "/MapPart/Latitude");
    mydoc = rendinumeric(mydoc, "/MapPart/Longitude");
    mydoc = cambianome(mydoc, "/event", "Event");

    mydoc = aggiungifiglio(mydoc, "/Venue/Addresses", "Address");
    mydoc = aggiungifiglio(mydoc, "/Venue/MoreInfos", "MoreInfo");
    mydoc = aggiungifiglio(mydoc, "/Venue/Contacts", "Contact");
    mydoc = aggiungifiglio(mydoc, "/Geolocation/MapParts", "MapPart");
    mydoc = aggiungifiglio(mydoc, "/Geopolygon/Geocoordinates", "MapPart");
    mydoc = aggiungifiglio(mydoc, "/Venue/GalleryLuoghi", "MediaPart");
    mydoc = aggiungipadre(mydoc, "/Event", "Venues", "Venue");
    mydoc = aggiungifiglio(mydoc, "/Event/Venues", "Venue");


    // rendo le occurrences un array sotto schedule e per retrocompatibilità lascio un noto occurrence sotto schedule
    mydoc = aggiungipadre(mydoc, "/Event/Schedule", "Occurrences", "occurrence");
    foreach (System.Xml.XmlNode occurrences in mydoc.SelectNodes("//Event/Schedule/Occurrences")) {
        if (occurrences != null && occurrences.FirstChild != null) {
            var firstChild = occurrences.FirstChild.CloneNode(true);
            if (firstChild != null) {
                var parent = occurrences.ParentNode;
                parent.AppendChild(firstChild);
            }
        }
    }
    mydoc = aggiungifiglio(mydoc, "/Event/Schedule/Occurrences", "occurrence");

    SpanXDocument(ToXDocument(mydoc).Root);
}