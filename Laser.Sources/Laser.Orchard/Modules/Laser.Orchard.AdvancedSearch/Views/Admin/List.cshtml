@using Orchard.Core.Contents.ViewModels;
@using Laser.Orchard.AdvancedSearch.ViewModels;
@using Laser.Orchard.AdvancedSearch;
@using Orchard.Security;


@{
    Script.Require("jQuery");
    Script.Require("jQueryUI").AtHead();
    Style.Require("AdvancedSearch").AtHead();
    Style.Require("Accordion").AtHead();
    var typeDisplayName = Model.TypeDisplayName;
    var pageTitle = T("Manage Content");
    var createLinkText = T("Create New Content");
    if (!string.IsNullOrWhiteSpace(typeDisplayName)) {
        pageTitle = T("Manage {0} Content", typeDisplayName);
        createLinkText = T("Create New {0}", typeDisplayName);
    }
    Layout.Title = pageTitle;
}

@using (Script.Head()) {
    <script type="text/javascript">
        $(document).ready(function () {
            inputvalueignorelist = new Array('AdvancedOptions.SelectedLanguageId0', 'AdvancedOptions.SelectedOwner', 'AdvancedOptions.SelectedFromDate', 'AdvancedOptions.SelectedToDate', 'AdvancedOptions.DateFilterType0', 'AdvancedOptions.SelectedTermId0', 'AdvancedOptions.HasMediafalse');
            $('.accordion-section-content :input').each(function () {
                if (!(inputvalueignorelist.indexOf((this.name + $(this).val())) >= 0)) {
                    if (this.name == 'AdvancedOptions.HasMedia') {
                        if (this.checked == true) {
                            //if (!$(this).parent().hasClass('open')) {
                            //    $(this).parent().parent().addClass('open');
                            //    $(this).parent().parent().css({ display: "block" });
                            //    //if ($($(this).parent().parent().parent().find('.accordion-section-title')).hasClass('active')) {
                            //    //   $($(this).parent().parent().parent().find('.accordion-section-title')).addClass('active');
                            //    //}
                            //}
                            if (!$(this).parentsUntil($('.accordion-section-content')).parent().hasClass('open')) {
                                $(this).parentsUntil($('.accordion-section-content')).parent().addClass('open');
                                $(this).parentsUntil($('.accordion-section-content')).parent().css({ display: "block" });
                            }
                            if (!$($(this).parentsUntil($('.accordion-section')).parent().find('.accordion-section-title')).hasClass('active')) {
                                $($(this).parentsUntil($('.accordion-section')).parent().find('.accordion-section-title')).addClass('active');
                            }
                        }
                    }
                    else {

                        if (!$(this).parentsUntil($('.accordion-section-content')).parent().hasClass('open')) {
                            $(this).parentsUntil($('.accordion-section-content')).parent().addClass('open');
                            $(this).parentsUntil($('.accordion-section-content')).parent().css({ display: "block" });
                        }
                        if (!$($(this).parentsUntil($('.accordion-section')).parent().find('.accordion-section-title')).hasClass('active')) {
                            $($(this).parentsUntil($('.accordion-section')).parent().find('.accordion-section-title')).addClass('active');
                        }
                    }
                }
            });

            function close_accordion_section() {
                $('.accordion .accordion-section-title').removeClass('active');
                //  $('.accordion .accordion-section-content').slideUp(300).removeClass('open');
            }

            $('.accordion-section-title').click(function (e) {
                // Grab current anchor value
                var currentAttrValue = $(this).attr('href');

                if ($(e.target).is('.active')) {
                    close_accordion_section();
                    $(e.target).parent().find(' .accordion-section-content').slideUp(300).removeClass('open')
                    //  $('.accordion ').slideUp(300).removeClass('open');
                } else {
                    close_accordion_section();

                    // Add active class to section title
                    $(this).addClass('active');
                    // Open up the hidden content panel
                    $('.accordion ' + currentAttrValue).slideDown(300).addClass('open');
                }

                e.preventDefault();
            });
        });
    </script>
}


@using (Script.Foot()) {
    @Display.DatePickerLocalization()
    <script type="text/javascript">
        //<![CDATA[
        $(function () {
            $('#dateFromResults').datepicker({ showAnim: "", changeYear: true, changeMonth: true });
            $('#dateToResults').datepicker({ showAnim: "", changeYear: true, changeMonth: true });
        });
        //]]>
    </script>
}

@using (Html.BeginFormAntiForgeryPost()) {

<div class="row">
    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title">@T("Manage content")</h3>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-sm-6">
                    <label class="col-sm-4 align-right gray-label">@T("Content creation:")</label>
                     @Html.ActionLink(createLinkText.Text, "Create", new { Area = "Contents", Id = (string)Model.Options.SelectedFilter }, new { @class = "button primaryAction" })
                </div>
                <div class="col-sm-6">
                    <label class="col-sm-3 align-right gray-label">@T("Builk actions:")</label>
                    <div class="col-sm-9">
                        <select id="publishActions" name="Options.BulkAction">
                            @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.None, T("Choose action...").ToString())
                            @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.PublishNow, T("Publish Now").ToString())
                            @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.Unpublish, T("Unpublish").ToString())
                            @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.Remove, T("Delete").ToString())
                        </select>
                        <button type="submit" name="submit.BulkEdit" value="yes">@T("Apply")</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.box-body -->
    </div>

    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title">@T("Content filtering")</h3>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-xs-12 col-md-4">
                    <label class="gray-label">@T("Content type:")</label>
                    <select id="filterResults" name="Options.SelectedFilter">
                        @Html.SelectOption((string)Model.Options.SelectedFilter, "", T("any (show all)").ToString())
                        @foreach (var filterOption in Model.Options.FilterOptions) {
                            @Html.SelectOption((string)Model.Options.SelectedFilter, (string)filterOption.Key, (string)filterOption.Value)
                        }
                    </select>
                </div>
                <div class="col-xs-12 col-md-4">
                    <label class="gray-label">@T("Content order:")</label>
                    <select id="orderResults" name="Options.OrderBy">
                        @Html.SelectOption((ContentsOrder)Model.Options.OrderBy, ContentsOrder.Created, T("recently created").ToString())
                        @Html.SelectOption((ContentsOrder)Model.Options.OrderBy, ContentsOrder.Modified, T("recently modified").ToString())
                        @Html.SelectOption((ContentsOrder)Model.Options.OrderBy, ContentsOrder.Published, T("recently published").ToString())
                    </select>
                </div>
                <div class="col-xs-12 col-md-4">
                    <label class="gray-label">@T("Content status:")</label>
                    <select id="contentResults" name="Options.ContentsStatus">
                        @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Latest, T("latest").ToString())
                        @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Published, T("published").ToString())
                        @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.Draft, T("unpublished").ToString())
                        @Html.SelectOption((ContentsStatus)Model.Options.ContentsStatus, ContentsStatus.AllVersions, T("all versions").ToString())
                    </select>
                </div>
            </div>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-xs-12 col-md-12">
                   <a class="accordion-section-title" role="button" data-toggle="collapse" href="#collapserow" aria-expanded="false" aria-controls="collapseExample">@T("Advanced filters")</a>
                </div>
            </div>
        </div>
        <div id="collapserow" class="collapse">
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-md-4">
                        <label for="languageResults" class="bulk-filter">@T("Language")</label>
                        <select id="languageResults" name="AdvancedOptions.SelectedLanguageId">
                            @Html.SelectOption((string)Model.AdvancedOptions.SelectedLanguageId.ToString(), "0", T("any (show all)").ToString())
                            @foreach (var languageOption in Model.AdvancedOptions.LanguageOptions) {
                                @Html.SelectOption((string)Model.AdvancedOptions.SelectedLanguageId.ToString(), (string)languageOption.Key.ToString(), (string)languageOption.Value)
                            }
                        </select>
                    </div> 
                    <div class="col-xs-12 col-md-4">
                        @try {
                            if (Model.AdvancedOptions.TaxonomiesOptions != null && Model.AdvancedOptions.TaxonomiesOptions.Count > 0) {
                            <label for="termsResults" class="bulk-filter">@T("Terms")</label>
                            <select id="termsResults" name="AdvancedOptions.SelectedTermId">
                                @Html.SelectOption((string)Model.AdvancedOptions.SelectedTermId.ToString(), "0", T("any (show all)").ToString())
                                @{ int optgroupinserted = 0;
                                   foreach (var languageOption in Model.AdvancedOptions.TaxonomiesOptions) {
                                       if ((string)languageOption.Key.ToString() == "-1") {
                                           if (optgroupinserted > 0) {
                                               Html.Raw("</optgroup>");
                                           }
                                           optgroupinserted = 1;
                                    @Html.Raw("<optgroup label=\"" + (string)languageOption.Value + "\">");
                                       } else {
                                    @Html.SelectOption((string)Model.AdvancedOptions.SelectedTermId.ToString(), (string)languageOption.Key.ToString(), (string)languageOption.Value)
                                       }
                                   }
                                   if (optgroupinserted > 0) {
                                    @Html.Raw("</optgroup>");
                                   }
                                }
                            </select>
                            }
                        } catch { }
                    </div>
                    @{
                        bool seeAll = Authorizer.Authorize(AdvancedSearchPermissions.SeesAllContent);
                        bool mayChoose =  Authorizer.Authorize(AdvancedSearchPermissions.MayChooseToSeeOthersContent);
                        bool onlyMine = (bool)Model.AdvancedOptions.OwnedByMe;

		                if (seeAll) {
                            onlyMine = (bool)Model.AdvancedOptions.OwnedByMeSeeAll;
                        }
                        
                        if (mayChoose) {
	                        //seeAll implies mayChoose
	                        <div class="col-xs-12 col-md-4">
		                        <label for="ownerResults" class="bulk-filter">@T("Owner")</label>
		                        @*for the texbox, we check loads of conditions*@
		                        @Html.TextBox(
			                        "AdvancedOptions.SelectedOwner",
			                        (!onlyMine) ? //(seeAll || !onlyMine) ?
				                        (string)Model.AdvancedOptions.SelectedOwner : 
				                        (string)WorkContext.CurrentUser.UserName,
			                        (!onlyMine) ?
				                        (object)new { id = "ownerResults" } : 
				                        (object)new { id = "ownerResults", @disabled = "disabled"}
		                        )
			                    &nbsp;
			                    @Html.CheckBox(
                                    seeAll ?
                                        "AdvancedOptions.OwnedByMeSeeAll" :
                                        "AdvancedOptions.OwnedByMe", 
                                    onlyMine, 
                                    new { id = "isOwnedByMe", @onclick = "checkOwnedByMeCheckBox()" }
                                )
			                    @T("Owned by me")
		                        
	                        </div>
                        }
                    }
                    
                    
                     
                </div>
            </div>

             <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-md-4">
                        <label class="gray-label">@T("Publish status:")</label>
                        <select id="dateTypeResults" name="AdvancedOptions.DateFilterType">
                            @foreach (var dateFilterOption in Enum.GetNames(typeof(Laser.Orchard.AdvancedSearch.DateFilterOptions))) {
                                @Html.SelectOption((string)Convert.ToInt32(Model.AdvancedOptions.DateFilterType).ToString(), (string)Convert.ToInt32(Enum.Parse(typeof(Laser.Orchard.AdvancedSearch.DateFilterOptions), dateFilterOption)).ToString(), (string)dateFilterOption)
                            }
                        </select>
                    </div>
                    <div class="col-xs-12 col-md-4">
                       <label for="dateFromResults" class="bulk-filter">@T("Date From")</label>
                        @Html.TextBox("AdvancedOptions.SelectedFromDate", (string)(Model.AdvancedOptions.SelectedFromDate != null ? Model.AdvancedOptions.SelectedFromDate.ToString() : ""), new { id = "dateFromResults" })
                    </div>
                    <div class="col-xs-12 col-md-2">
                        <label for="dateToResults" class="bulk-filter">@T("Date To")</label>
                         @Html.TextBox("AdvancedOptions.SelectedToDate", (string)(Model.AdvancedOptions.SelectedToDate != null ? Model.AdvancedOptions.SelectedToDate.ToString() : ""), new { id = "dateToResults" })
                    </div>
                    <div class="col-xs-12 col-md-2">
                        <label for="hasMediaResults" class="bulk-filter">@T("Only with media")</label>
                        @Html.CheckBox("AdvancedOptions.HasMedia", (bool)Model.AdvancedOptions.HasMedia, new { id = "hasMediaResults" })
                    </div>
                </div>
            </div>
        </div>
        <div class="box-footer align-right padding-right-35">
            <button type="submit" name="submit.Filter" value="yes please">@T("Apply")</button>
        </div>
        <!-- /.box-body -->
    </div>
</div>
    
<script>
    function checkOwnedByMeCheckBox() {
        var cbOwnedByMe = document.getElementById("isOwnedByMe"); //this is the checkbox object
        var tbOwner = document.getElementById("ownerResults"); //this is the owner textbox
        if (cbOwnedByMe.checked) {
            tbOwner.value = "@WorkContext.CurrentUser.UserName";
            tbOwner.disabled = true;
        } else {
            tbOwner.disabled = false;
        }
    }
</script>
    
    
    
    <fieldset class="contentItems bulk-items">
        @Display(Model.ContentItems)
    </fieldset>
    @Display(Model.Pager)
}