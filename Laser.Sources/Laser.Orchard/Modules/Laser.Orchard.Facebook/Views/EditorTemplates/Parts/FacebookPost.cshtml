@using System.Web.Mvc.Html
@model Laser.Orchard.Facebook.ViewModels.FacebookPostVM
@using (Script.Head()) {
    Script.Require("jQuery_ImagePicker").AtHead();
    Style.Require("jQuery_ImagePicker").AtHead();
    Script.Require("rcswitcher").AtHead();
    Style.Require("rcswitcher").AtHead();
}
@using (Script.Foot()) {
    <script type="text/javascript">
        $(function () {
            $('.rcswitcher-checkbox-fb').rcSwitcher({
                theme: 'flat',
                blobOffset: 1,
                onText: '@T("YES")',
                offText: '@T("NO")'
            })
        });
            $(window).load(function () {
                $("#@Html.FieldIdFor(m => m.SelectedList)").imagepicker(
                       { show_label: true }
                       );
        }
    );

    </script>
}

<div id="facebook-comm-container" class="comm-tabbed">
    @if (Model.ListOption.Count == 0) {
        <br />   <a href="@Url.Action("Index", "FacebookAccount", new { area = "Laser.Orchard.Facebook" })">@T("Insert a facebook account ")</a> <br /> 
    } else {
        <fieldset>
            @Html.HiddenFor(m => m.FacebookMessageSent)
            @if (Model.ShowFacebookMessage) {
                <div class="editor-label">@Html.LabelFor(m => m.FacebookMessage, T("Message"))</div>
                <div class="editor-label">@Html.TextAreaFor(m => m.FacebookMessage)</div>
            } else {
                @Html.HiddenFor(m => m.FacebookMessage)
            }
            @if (Model.ShowFacebookCaption) {
                <div class="editor-label">@Html.LabelFor(m => m.FacebookCaption, T("Caption"))</div>
                <div class="editor-label">@Html.TextBoxFor(m => m.FacebookCaption, new { @class = "text large" })</div>
            } else {
                @Html.HiddenFor(m => m.FacebookCaption)
            }
            @if (Model.ShowFacebookDescription) {
                <div class="editor-label">@Html.LabelFor(m => m.FacebookDescription, T("Description"))</div>
                <div class="editor-label">@Html.TextAreaFor(m => m.FacebookDescription)</div>
            } else {
                @Html.HiddenFor(m => m.FacebookDescription)
            }
            @if (Model.ShowFacebookLink) {
                <div class="editor-label">@Html.LabelFor(m => m.FacebookLink, T("Link"))</div>
                <div class="editor-label">@Html.TextBoxFor(m => m.FacebookLink, new { @class = "text large" })</div>
            } else {
                @Html.HiddenFor(m => m.FacebookLink)
            }
            @if (Model.ShowFacebookName) {
                <div class="editor-label">@Html.LabelFor(m => m.FacebookName, T("Name"))</div>
                <div class="editor-label">@Html.TextBoxFor(m => m.FacebookName, new { @class = "text large" })</div>
            } else {
                @Html.HiddenFor(m => m.FacebookName)
            }
            @if (Model.ShowFacebookPicture) {
                <div class="editor-label">@Html.LabelFor(m => m.FacebookPicture, T("Picture Url"))</div>
                <div class="editor-label">@Html.TextBoxFor(m => m.FacebookPicture, new { @class = "text large" })</div>          
            } else {
                @Html.HiddenFor(m => m.FacebookPicture)
            }
            @*        @{
        if (Model.FacebookAccountList != null) {
            <div class="editor-label">@Html.LabelFor(m => m.SelectedList, T("AccountList"))</div>
            <div class="editor-label">@Html.ListBoxFor(m => m.SelectedList, Model.FacebookAccountList)</div>
        }
        }*@
            @{
            if (Model.ListOption.Count > 0) {
                <div class="editor-label">@Html.LabelFor(m => m.SelectedList, T("AccountList"))</div>
                <select multiple="multiple" name="@Html.FieldNameFor(m => m.SelectedList)" id="@Html.FieldIdFor(m => m.SelectedList)"  class="image-picker show-labels show-html">
                    @foreach (var item in Model.ListOption) {
                        <option data-img-src="@item.ImageUrl" data-img-label="@item.Text" value="@item.Value" @(item.Selected)>@item.Text</option>
                    }
                </select>
            }
            }
        </fieldset>
        <fieldset>
            @Html.LabelFor(m => m.SendOnNextPublish, T("Send on next publish").Text, new { @class = "forcheckbox" })
            @Html.CheckBoxFor(model => model.SendOnNextPublish, new { @class = "rcswitcher-checkbox-fb" })
        </fieldset>
 
    }
</div>
<div class="tab-folder">
    <a href="#facebook-comm-container"><i class="fa fa-facebook"></i>@T("Facebook")</a>
</div>
