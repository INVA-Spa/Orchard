@model Laser.Orchard.MailCommunication.Models.MailCommunicationPart
@{
    Script.Require("rcswitcher").AtHead();
    Style.Require("rcswitcher").AtHead();
    bool disabledElements = Model.MailMessageSent;
}
@using (Script.Foot()) {
    <script type="text/javascript">
        $(function () {
@*                    @if (disabledElements) { 
            <text>
            $('#mail-comm-container :input').attr('readonly', 'readonly');
            $('#mail-comm-container .button.add').remove();
            $('#mail-comm-container .content-picker-remove').remove();
            </text>
                    }*@


            $('.rcswitcher-checkbox-mail').rcSwitcher({
                theme: 'flat',
                blobOffset: 1,
                onText: '@T("YES")',
                offText: '@T("NO")'
            }).on({
                'turnon.rcSwitcher': function (e, dataObj) {
                    if (e.target.id == '@Html.FieldIdFor(m => m.SendToTestEmail)') {
                        $("#test-email-container").show(400);
                    }
                },
                'turnoff.rcSwitcher': function (e, dataObj) {
                    if (e.target.id == '@Html.FieldIdFor(m => m.SendToTestEmail)') {
                        $("#test-email-container").hide(400);
                    }
                }
            });
        });
    </script>
}
<fieldset>
    @Html.LabelFor(m => m.SendToTestEmail, T("Send for test").Text, new { @class = "forcheckbox" })
    @Html.CheckBoxFor(model => model.SendToTestEmail, new { @class = "rcswitcher-checkbox-mail" })
</fieldset>
<fieldset id="test-email-container" style="@((!Model.SendToTestEmail) ? "display:none;" : "")">
    @Html.LabelFor(m => m.EmailForTest, T("Test Email").Text, new { @class = "forcheckbox" })
    @Html.TextBoxFor(model => model.EmailForTest, new { @class = "text medium" })
    <button type="submit" name="submit.Save" value="submit.MailTest">@T("Send for test")</button>
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.SendOnNextPublish, T("Approved").Text, new { @class = "forcheckbox" })
    @if (!disabledElements) { 
        @Html.CheckBoxFor(model => model.SendOnNextPublish, new { @class = "rcswitcher-checkbox-mail" }) 
        <i class="fa fa-times-circle" style="color: red"></i> @T("Message not yet sent.")
    } else {
        @Html.CheckBoxFor(model => model.SendOnNextPublish, new { @class = "rcswitcher-checkbox-mail", @disabled = "disabled" }) 
        <i class="fa fa-check-circle" style="color: green"></i> @T("Message already sent.")
    }
    @if (disabledElements) { 
        <div class="message message-Error">@T("This E-mail message has been already sent. You will be able to edit and save it, but it will not be sent anymore on next publish.")</div>
    }
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.RecipientsNumber, T("Number of recipients").Text, new { @class = "forcheckbox" })
    <span style="margin-left:20px;font-weight:bold">@Model.RecipientsNumber</span>
</fieldset> 
<fieldset>
    @Html.LabelFor(m => m.SentMailsNumber, T("Number of sent mails").Text, new { @class = "forcheckbox" })
    <span style="margin-left:20px;font-weight:bold">@Model.SentMailsNumber</span>
</fieldset>
