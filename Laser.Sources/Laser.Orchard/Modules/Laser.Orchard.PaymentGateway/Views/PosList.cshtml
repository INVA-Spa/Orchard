@using Laser.Orchard.PaymentGateway.ViewModels;
@{
    Script.Require("jQuery").AtHead();
}
<h2 id="PaymentMethodsTitle">@T("Pay using:")</h2>
@using(Html.BeginFormAntiForgeryPost()){
    //TODO:move all the parameters to hidden fields, rather than passing them to the Actions in querystring.
    //also, the actions should be called in post.
    <div id="VirtualPosButtons">
        @Html.Hidden("PaymentRecordId", (int)(Model.Record.Id), new { @id = "paymentRecordId" })
        <ul style="list-style-type:none">
            @foreach(var pos in Model.PosList) {
                <li><button type="submit" style="padding: 10px 10px; display: none;" class="posButtonClass" formaction="@Html.Raw(pos.GetPosActionUrl(Model.Record.Id))">@pos.GetPosName()</button></li>
            }
        </ul>
    </div>
    
}
@using (Script.Foot()){
    <script type="text/javascript">
        //TODO: write the script that connects to our server and checks things about the payment whose ID we have here.
        $(function () {
            //get all the buttons we use to call the Actions to start payments
            var posButtons = document.querySelectorAll(".posButtonClass");
            //get the id of the payment
            var paymentId = parseInt(document.getElementById("paymentRecordId").value);
            //get the area where we want to show the buttons
            var divForButtons = document.getElementById("VirtualPosButtons");
            var posTitle = document.getElementById("PaymentMethodsTitle");

            function PaymentIsIncomplete(pId) {
                var result = false;
                var url = '@Url.Action("PaymentIsIncomplete", "Payment", new { area = "Laser.Orchard.PaymentGateway", paymentId = "__id__"})'.replace('__id__', paymentId);
                var formData = { __RequestVerificationToken: '@Html.AntiForgeryTokenValueOrchard()' };
                $.ajax({
                    url: url,
                    data: formData,
                    type: "POST",
                    success: function (response) {
                        if (response.Success) {
                            ShowPosButtons();
                        } else {
                            HidePosButtons();
                        }
                    },
                    error: function (response) {
                        HidePosButtons();
                    }
                });
            }

            function ResetPosTitle() {
                posTitle.innerText = "@T("Pay using:")";
            }

            function ShowPosButtons() {
                ResetPosTitle();
                for (var but = 0; but < posButtons.length; but++) {
                    posButtons[but].style.display = "inherit";
                }
            }

            function HidePosButtons() {
                ResetPosTitle();
                for (var but = 0; but < posButtons.length; but++) {
                    posButtons[but].style.display = "none";
                }
                divForButtons.innerText = "@T("There was an error initializing the payment. Please try again.").Text";
            }

            posTitle.innerText = "@T("Loading valid payment methods. Please wait.").Text";
            PaymentIsIncomplete(paymentId);

        }());
    </script>
}