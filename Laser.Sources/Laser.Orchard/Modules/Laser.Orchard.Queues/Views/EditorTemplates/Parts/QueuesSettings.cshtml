@model Laser.Orchard.Queues.ViewModels.QueuesSettingsViewModel

@{
    Script.Require("jQuery_NestedModels").AtHead();
    Style.Require("FontAwesome430").AtHead();
}

<fieldset>
    <legend>@T("Manage Queues")</legend>
    <div>
        <label for="@Html.FieldIdFor(m => m.EndpointUrl)">@T("Queue Service URL")</label>
        @Html.TextBoxFor(m => m.EndpointUrl, new { @class="text large"})
        <span class="hint">@T("The URL of the service providing the current number.")</span>
    </div>
    <div>
        @Html.LabelFor(m => m.PollingInterval, @T("Polling Interval"))
        @Html.TextBoxFor(m => m.PollingInterval, new { @class="text small"})
        <span class="hint">@T("The number of minutes between each interrogation of the data.")</span>
    </div>
    <div>
        @Html.LabelFor(m => m.MaxPushToSend, @T("Notifications to Send"))
        @Html.TextBoxFor(m => m.MaxPushToSend, new { @class="text small"})
        <span class="hint">@T("The maximum amount of notifications that a user will receive for each of his numbers.")</span>
    </div>
    <p style="margin-top: 10px;">
        <i class="fa fa-plus" style="color: green; margin-right:5px;"></i>@Html.LinkToAddNestedForm(x => x.Queues, T("Add Queue").Text, "#queues", ".j_queue", "queue")
    </p>
    <div id="queues">
        <ul id="j_menuquestion">
        </ul>
        @Html.EditorFor(x => x.Queues)
    </div>
    <span class="hint">
        @T("The Name field should be a unique identifier for the queue.")<br />
        @T("The Number Distance field tells the system to notify the user when its number is at the specified distance from the current number.")<br />
        @T("The Max Number field represents the maximum number distributed for the queue, after which the numbers distributed may restart.")
    </span>
</fieldset>

@{
    using (Script.Head())
    {
         <script type="text/javascript">
                 function CleanFieldsOnRemove(caller)
                 {
                     $(caller).parent().parent().find('input').each(function () {
                         if (!$(this).hasClass("preserve-on-clean"))
                         {
                             $(this).val("");
                         }
                     })
                 }
         </script>
    }
}
