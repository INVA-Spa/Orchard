@using Laser.Orchard.TaskScheduler.ViewModels;
@using Laser.Orchard.Commons.Helpers;
@using Laser.Orchard.TaskScheduler;
@using Orchard;
@using System.Globalization;

@model Laser.Orchard.TaskScheduler.ViewModels.ScheduledTaskViewModel

@{
    Style.Require("Accordion").AtHead();
    
    MvcHtmlString taskBlock = Html.UniqueClientId("ScheduledTaskViewModel");

    var appId = "st_" + taskBlock;

    string moreDetails = T("More details").ToString();
    string fewDetails = T("Fewer details").ToString();
}

<div id="@appId" class="j_scheduledtasks">
    @Html.HiddenFor(m => m.Id) @*This value must be in the form to pass it forward*@
    @Html.HiddenFor(m => m.Delete, new { @class = "ph-mark-for-delete", @id = "delete_" + @appId })
    @Html.HiddenFor(m => m.Scheduling, new { @class = "ph-mark-for-scheduling", @id = "schedule_" + @appId })

    <label for="sig_@appId">@T("Signal name")</label>
    @Html.TextBoxFor(m => m.SignalName, new {
        placeholder = T("Signal name").ToString(),
        @title = T("Name of the signal that will be triggered by the task").ToString(),
        @id = "sig_" + @appId,
        @class = "text medium",
        @required = "required"
    })

    @*Stuff for the Schedule/Unschedule button*@
    @Html.HiddenFor(m => m.Running) @*I need to have the value of running somewhere in the form*@
    @if (Model.Running > 0) {
        <text>
        <button id="unscheduleTask_@appId" type="submit" name="submit.UnscheduleTask" value="yes please" onclick="FlagForSchedulingEvent('@appId');">@T("Unschedule")</button>
        @*@Html.ActionLink(T("Unschedule this task").ToString(), "IndexUnscheduleTask", "Admin", new { }, new { @class = "button" })*@
        </text>
    } else {
        <text>
        <button id="scheduleTask_@appId" type="submit" name="submit.ScheduleTask" value="yes please" onclick="FlagForSchedulingEvent('@appId');">@T("Schedule")</button>
        </text>
    }

    <a class="accordion-section-title" role="button" data-toggle="collapse" href="#collapse_@appId" id="collapseButton_@appId">
        @moreDetails
    </a>

    <div id="collapse_@appId" class="collapse">
        <label for="@Html.FieldIdFor(m => m.ScheduledStartUTC)">@T("Start Date")</label>
        @Html.TextBoxFor(m => m.ScheduledStartUTCDate, new { @class = "text", @title = @T("Invalid dates will be ignored") })
        @Html.TextBoxFor(m => m.ScheduledStartUTCTime, new { @class = "text", @title = @T("Invalid times will be ignored") })

        <label>@T("Periodicity")</label>
            @Html.TextBoxFor(m => m.PeriodicityTime, new {
            @title = T("Amount of time that should pass between repetitions of the task (integer)").ToString(),
            @id = "time_" + @appId,
            @class = "text small",
            @pattern = "[0-9]*{1,}",
            @required = "required"
        })

        @Html.DropDownListFor(m => m.PeriodicityUnit, new SelectList(Enum.GetValues(typeof(TimeUnits))), new {
            @title = @T("The time units for the repetitions of the task.")
        })

        <label>@T("Content Item Id")</label>
            @Html.TextBoxFor(m => m.ContentItemId, new {
            @class = "text small",
            @pattern = "[0-9]*",
            @required = "required",
            @title = @T("Id of the Content Item that will be passed with the task. 0 for no item.")
        })
    </div>
    

    @*Link to remove the task*@
    @if (Model.Running == 0) {
        <text>
        <br />
        @Html.LinkToRemoveNestedForm("<i class=\"fa fa-times\" style=\"color: red\"></i> " + T(" Remove this task").ToString(), ".j_scheduledtasks", "input.ph-mark-for-delete")
        </text>
    }

    <hr style="margin-top:0.5em; margin-bottom:0.5em;"/>

</div>

@using (Script.Foot()) {
    string dtfDate = CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern.ToLowerInvariant();
    string dtfTime = CultureInfo.InvariantCulture.DateTimeFormat.ShortTimePattern.ToLowerInvariant();
    <script type="text/javascript">
        @*$(function () {
            $('#@Html.FieldIdFor(m => m.ScheduledStartUTC)').datetimepicker({ 'showTimepicker': true, showAnim: "", changeYear: true, changeMonth: true });
        })*@
        $(function () {
            var dateRenderer = $.extend(
                {},
                $.calendarsPicker.themeRollerRenderer,
                {
                    picker: "<div {popup:start} id='ui-datepicker-div'{popup:end} class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all{inline:start} ui-datepicker-inline{inline:end}'><div class='ui-datepicker-header ui-widget-header ui-helper-clearfix ui-corner-all'>{link:prev}{link:today}{link:next}</div>{months}{popup:start}{popup:end}<div class='ui-helper-clearfix'></div></div>",
                    month: "<div class='ui-datepicker-group'><div class='ui-datepicker-month ui-helper-clearfix'>{monthHeader:MM yyyy}</div><table class='ui-datepicker-calendar'><thead>{weekHeader}</thead><tbody>{weeks}</tbody></table></div>"
                }
            );
            $('#@Html.FieldIdFor(m => m.ScheduledStartUTCDate)').calendarsPicker({
                dateFormat: '@dtfDate',
                showAnim: "",
                renderer: dateRenderer
            });
            $.timeEntry.regionalOptions['@HttpUtility.JavaScriptStringEncode(CultureInfo.GetCultureInfo(WorkContext.CurrentCulture).Name)'] = {
                show24Hours: true,
                separator: ':',
				ampmPrefix: '',
				ampmNames: ['AM', 'PM'],
                spinnerTexts: [
                    '@HttpUtility.JavaScriptStringEncode(T("Now").Text)',
                    '@HttpUtility.JavaScriptStringEncode(T("Previous field").Text)',
                    '@HttpUtility.JavaScriptStringEncode(T("Next field").Text)',
                    '@HttpUtility.JavaScriptStringEncode(T("Increment").Text)',
                    '@HttpUtility.JavaScriptStringEncode(T("Decrement").Text)'
                ]
            };
            $.timeEntry.setDefaults($.timeEntry.regionalOptions['@HttpUtility.JavaScriptStringEncode(CultureInfo.GetCultureInfo(WorkContext.CurrentCulture).Name)']);
            $('#@Html.IdFor(m => m.ScheduledStartUTCTime)').timeEntry()
        })
    </script>

    <script type="text/javascript">
        $(function () {
            $('#collapseButton_@appId').click(function () {
                if ($('#collapse_@appId').attr("aria-expanded") === "true") {
                    this.innerHTML = "@moreDetails";
                } else {
                    this.innerHTML = "@fewDetails";
                }
            });
        }());
    </script>
}
