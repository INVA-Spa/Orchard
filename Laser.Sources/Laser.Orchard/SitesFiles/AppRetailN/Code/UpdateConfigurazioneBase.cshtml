@using Orchard.ContentManagement;
@using Orchard.Fields.Fields;
@using System.Linq;

@functions{
    // Model.ContentItem is ConfigurazioneBase
    //services
    IContentManager _contentManager;
    string retString = "Error"; //possible outcomes: Error,Ok
    string eMsg = "";
}
@{
    try {
        // resolve services
        _contentManager = Model.OrchardServices.WorkContext.Resolve<IContentManager>();
        // get app type
        ContentItem config = Model.ContentItem;
        string contentType = config.ContentType;
        ContentPart part = config.Parts.FirstOrDefault(x => x.PartDefinition.Name == contentType);
        if (part != null) {
            ContentField field = part.Fields.FirstOrDefault(x => x.Name == "Type");
            if (field != null) {
                EnumerationField enumField = field as EnumerationField;
                // get settings of ScriptNascondiPrezzo in content type Prodotto
                var settings = _contentManager.GetContentTypeDefinitions().First(x => x.Name == "Prodotto").Parts.First(x => x.PartDefinition.Name == "Prodotto").PartDefinition.Fields.First(x => x.Name == "ScriptNascondiPrezzo").Settings;
                var script = settings["InsertStuffFieldSettings.RawHtml"];
                // update script if necesssary
                if (enumField.Value.Contains("B2C") && string.IsNullOrWhiteSpace(script)) {
                    settings["InsertStuffFieldSettings.RawHtml"] = "<script type='text/javascript'>\r\n$('label[for=Prodotto_NascondiPrezzo_Value]').parent().hide();\r\n</script>";
                } else if (enumField.Value.Contains("B2C") == false && string.IsNullOrWhiteSpace(script) == false) {
                    settings["InsertStuffFieldSettings.RawHtml"] = "";
                }
                retString = "Ok";
            }
        }
    } catch (Exception ex) {
        eMsg += string.Format("\r\n{0}", ex.Message);
        Model.Tokens["Workflow"].SetState("ErrorMessage", eMsg);
    }
}@retString