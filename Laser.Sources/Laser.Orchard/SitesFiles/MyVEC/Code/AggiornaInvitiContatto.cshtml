@using Laser.Orchard.CommunicationGateway.Models;
@using Laser.Orchard.CommunicationGateway.Services;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using Orchard;
@using Orchard.ContentManagement;
@using Orchard.Projections.Services;
@functions{
    string retString = "Error"; //possible outcomes: "Error","OK"
    string eMsg = String.Empty;

    //Services we will need
    ICommunicationService _communicationService; //from Laser.Orchard.CommunicationGateway
    IFieldIndexService _fieldIndexService;
    IContentManager _contentManager;
}
@{
    try {
        if (Model.Tokens["Workflow"].GetState("ErrorMessage") != null) {
            eMsg = Model.Tokens["Workflow"].GetState("ErrorMessage") + Environment.NewLine;
        }
        //resolve services
        _communicationService = Model.OrchardServices.WorkContext.Resolve<ICommunicationService>();
        _fieldIndexService = Model.OrchardServices.WorkContext.Resolve<IFieldIndexService>();
        _contentManager = Model.OrchardServices.WorkContext.Resolve<IContentManager>();
        //resolve content item of type SchedaInvito
        dynamic item = Model.ContentItem;
        if (item.SchedaInvito.Visita.Ids.Length > 0) { //a Visita in the cpf is required, but I check anyway
            var idVisita = item.SchedaInvito.Visita.Ids[0];
            //Find the CommunicationContact related to the SchedaInvito:
            // The Creator of the SchedaInvito is the User that corresponds to the guest we have invited
            //var guest = _contentManager.Get((int)(item.CommonPart.Creator.Value));
            //find the contact
            dynamic contact = _communicationService.GetContactFromUser((int)(item.CommonPart.Creator.Value)).ContentItem;
            var cpf = contact.CommunicationContact.InvitiVisita;
            //add the Visita to the ContentPickerField in the CommunicationContact
            if (!((int [])cpf.Ids).Any(id => id == idVisita)) {
                //only add if the Visita is not there already
                var idList = ((int [])cpf.Ids).ToList();
                idList.Add(idVisita);
                cpf.Ids = idList.ToArray();
            }
            //update field record for the ContentPickerField
            string allIds = String.Join(",", ((int[])cpf.Ids).Select<int, string>(id => "{" + id.ToString() + "}"));
            _fieldIndexService.Set(
                contact.FieldIndexPart,
                "CommunicationContact",
                "InvitiVisita",
                "",
                allIds,
                typeof(string)
            );
            retString = "OK";
        }
    } catch (Exception ex) {
        eMsg += ex.Message + Environment.NewLine;
    }
}@retString