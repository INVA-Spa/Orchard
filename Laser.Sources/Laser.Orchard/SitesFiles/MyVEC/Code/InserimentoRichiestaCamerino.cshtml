@using Orchard;
@using Orchard.ContentManagement;
@using Orchard.ContentManagement.Records;
@using Orchard.Projections.Models;
@using Orchard.Projections.Services;
@using Orchard.Autoroute.Models;
@using Orchard.Data;
@using System.Linq;
@using System.Data;
@using System.Collections.Generic;
@functions{
    IFieldIndexService _fieldIndexService;
    IContentManager _contentManager;
    string retString = "Error"; //possible outcomes: "Error","Ok"
    dynamic visita = null;
    string csv = "";
    dynamic ciProduct = null;
    dynamic ciColor = null;
    dynamic richiestaCamerino = null;
    Orchard.Workflows.Models.WorkflowContext wfCtx = null;
}
@{
    string LogVisita = "";
    try {
        wfCtx = Model.Tokens["Workflow"];
        // inizializza i services
        _fieldIndexService = Model.OrchardServices.WorkContext.Resolve<IFieldIndexService>();
        _contentManager = Model.OrchardServices.WorkContext.Resolve<IContentManager>();
        // legge i dati in input
        string product = System.Web.HttpContext.Current.Request["productId"];
        string color = System.Web.HttpContext.Current.Request["color"];
        string size = System.Web.HttpContext.Current.Request["size"];
        // recupera il prodotto
        var qry1 = _contentManager.Query().ForType("Prodotto");
        qry1 = qry1.Where<AutoroutePartRecord>(x => (x.DisplayAlias == product));
        ciProduct = qry1.List().FirstOrDefault();
        // recupera il colore
        var qry2 = _contentManager.Query().ForType("Colore");
        qry2 = qry2.Where<AutoroutePartRecord>(x => (x.DisplayAlias == color));
        ciColor = qry2.List().FirstOrDefault();
        if (ciProduct != null) {
            string strColor = (ciColor != null) ? ciColor.TitlePart.Title : "";
            // costruisce la richiesta camerino
            richiestaCamerino = Model.OrchardServices.ContentManager.New("RichiestaCamerino");
            Model.OrchardServices.ContentManager.Create(richiestaCamerino);
            richiestaCamerino = Model.OrchardServices.ContentManager.Get(richiestaCamerino.Id);
            // title
            richiestaCamerino.TitlePart.Title = string.Format("Richiesta camerino - {0} {1} {2}", ciProduct.TitlePart.Title, strColor, size);
            // taglia
            richiestaCamerino.RichiestaCamerino.Taglia.Value = size;
            _fieldIndexService.Set(
                richiestaCamerino.FieldIndexPart,
                "RichiestaCamerino",
                "Taglia",
                "",
                size,
                typeof(string)
            );
            // prodotto
            richiestaCamerino.RichiestaCamerino.Prodotto.Ids = new int[] { ciProduct.Id };
            _fieldIndexService.Set(
                richiestaCamerino.FieldIndexPart,
                "RichiestaCamerino",
                "Prodotto",
                "",
                string.Format("{{{0}}}", ciProduct.Id),
                typeof(string)
            );
            // colore
            if (ciColor != null) {
                richiestaCamerino.RichiestaCamerino.Colore.Ids = new int[] { ciColor.Id };
                _fieldIndexService.Set(
                    richiestaCamerino.FieldIndexPart,
                    "RichiestaCamerino",
                    "Colore",
                    "",
                    string.Format("{{{0}}}", ciColor.Id),
                    typeof(string)
                );
            }
            // owner
            richiestaCamerino.CommonPart.Owner = ciProduct.CommonPart.Owner;
            // negozio
            var qry3 = _contentManager.Query().ForType("PuntoVendita");
            var ciNegozio = qry3.List().FirstOrDefault();
            if(ciNegozio != null) {
                richiestaCamerino.RichiestaCamerino.Negozio.Ids = new int[] { ciNegozio.Id };
                _fieldIndexService.Set(
                    richiestaCamerino.FieldIndexPart,
                    "RichiestaCamerino",
                    "Negozio",
                    "",
                    string.Format("{{{0}}}", ciNegozio.Id),
                    typeof(string)
                );
            }
            // pubblica le modifiche
            Model.OrchardServices.ContentManager.Publish(richiestaCamerino);
            retString = "Ok";
        }
        else{
            wfCtx.SetState("ErrorMessage", "Prodotto richiesto non trovato");
        }
    }
    catch (Exception ex) {
        wfCtx.SetState("ErrorMessage", ex.Message);
    }
}
@retString