@using Orchard;
@using Orchard.ContentManagement;
@using Orchard.ContentManagement.Records;
@using Orchard.Projections.Models;
@using Orchard.Projections.Services;
@using Orchard.Data;
@using System.Linq;
@functions{
    Orchard.Data.IRepository<FieldIndexPartRecord> _fieldIndexPartRecord;
    string retString = "Error"; //possible outcomes: "Error","Ok"
    dynamic usr = null;
    string questionnaireContext = "";
    Orchard.Workflows.Models.WorkflowContext wfCtx = null;
}
@{
    try {
        wfCtx = Model.Tokens["Workflow"];
        questionnaireContext = Model.Tokens["QuestionnaireContext"];
        int visitaId = Convert.ToInt32(questionnaireContext);
        string cpfVisitaValue = string.Format("{{{0}}}", visitaId);
        usr = Model.OrchardServices.WorkContext.CurrentUser;
        int questionnaireId = Model.ContentItem.Id;
        string mail = usr.Email;
        _fieldIndexPartRecord = Model.OrchardServices.WorkContext.Resolve<IRepository<FieldIndexPartRecord>>();
        var qryInviti = _fieldIndexPartRecord.Table
            .Where(f => f.StringFieldIndexRecords.Any(r => r.PropertyName == "SchedaInvito.Email." && r.Value == mail))
            .Where(f => f.StringFieldIndexRecords.Any(r => r.PropertyName == "SchedaInvito.Visita." && r.Value == cpfVisitaValue))
            .Select(x => x.ContentItemRecord.Id);
        var ids = qryInviti.ToList();
        if(ids.Count > 0) {
            dynamic invito = ((dynamic)Model.OrchardServices.ContentManager.Get((int)(ids[0]), VersionOptions.DraftRequired));
            // se l'invito non è stato eliminato esamino la relativa visita
            if(invito != null) {
                invito.SchedaInvito.QuestionarioCompilato.Value = "Done";
                // pubblica per aggiornare i fieldIndex
                Model.OrchardServices.ContentManager.Publish(invito);
                retString = "Ok";
            }                
        }
        if(retString != "Ok") {
            wfCtx.SetState("ErrorMessage", "Aggiornamento flag 'QuestionarioCompilato' non riuscito: invito non trovato.");
        }
    }
    catch(Exception ex) {
        wfCtx.SetState("ErrorMessage", ex.Message);
    }
}
@retString