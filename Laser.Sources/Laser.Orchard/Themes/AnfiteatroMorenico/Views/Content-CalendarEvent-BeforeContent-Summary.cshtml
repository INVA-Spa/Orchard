@using Orchard.Utility.Extensions;
@using Laser.Orchard.StartupConfig.Localization;
@{
    Model.Classes.Add("content-item");
    dynamic dateLocal = WorkContext.Resolve<IDateLocalization>();
    var contentTypeClassName = ((string)Model.ContentItem.ContentType).HtmlClassify();
    Model.Classes.Add(contentTypeClassName);

    var dataInizioFull = dateLocal.ReadDateLocalized(Model.ContentItem.ActivityPart.DateTimeStart, true);
    var dataFineFull = dateLocal.ReadDateLocalized(Model.ContentItem.ActivityPart.DateTimeEnd, true);
    var dataInizio = dataInizioFull.Date;
    var dataFine = dataFineFull.Date;
    var oraInizio = dataInizioFull.ToString("HH:mm");
    var oraFine = dataFineFull.ToString("HH:mm");
    if (Model.ContentItem.ActivityPart.AllDay) {
        if (dataInizio == dataFine) {
            eventDates = dataInizio.ToString("dd MMMM yyyy");
        } else {
            eventDates = String.Format("{0} - {1}", dataInizio.ToString("dd MMMM yyyy"), dataFine.ToString("dd MMMM yyyy"));
        }
    } else {
        if (dataInizio == dataFine) {
            if (!oraFine.ToString().EndsWith("59")) {
                eventDates = String.Format("{0}, {1} / {2}", dataInizio.ToString("dd MMMM yyyy"), oraInizio, oraFine);
            } else {
                eventDates = String.Format("{0}, {1}", dataInizio.ToString("dd MMMM yyyy"), oraInizio);
            }
        } else {
            if (!oraFine.EndsWith("59")) {
                eventDates = String.Format("{0} - {1} / {2} - {3}", dataInizio.ToString("dd MMMM yyyy"), oraInizio, dataFine.ToString("dd MMMM yyyy"), oraFine);
            } else {
                eventDates = String.Format("{0} - {1}, {2}", dataInizio.ToString("dd MMMM yyyy"), dataFine.DateTimeEnd.ToString("dd MMMM yyyy"), oraInizio);
            }
        }
    }

}
<div class="row">
    <div class="col-xs-12 col-sm-4">
        <a href="@Url.ItemDisplayUrl((Orchard.ContentManagement.IContent)Model.ContentItem)" title="@T("Go to page {0}",Model.ContentItem.TitlePart.Title)">
		@{var alt=Model.ContentItem.CalendarEvent.Gallery.MediaParts[0].AlternateText;
		if (string.IsNullOrEmpty(alt)){
		alt=Model.ContentItem.TitlePart.Title;
		}
		}
            <img src="@Display.ResizeMediaUrl(Width: 720, Height: 480, Mode: "pad", Alignment: "middlecenter", Path: Model.ContentItem.CalendarEvent.Gallery.MediaParts[0].MediaUrl)" class="img-responsive" alt="@alt">
        </a>
    </div>
    <div class="col-xs-12 col-sm-8">
        <h3 class="eventi-title"><a title="@T("Go to page {0}",Model.ContentItem.TitlePart.Title)" class="neutro" href="@Url.ItemDisplayUrl((Orchard.ContentManagement.IContent)Model.ContentItem)">
            @Model.ContentItem.TitlePart.Title.ToUpper()</a></h3>
        <h4 class="eventi-date">@eventDates</h4>
        
        @{ 
            string bodyHtml = Model.ContentItem.BodyPart.Text;
            var body = new HtmlString(Html.Excerpt(bodyHtml, 450).ToString().Replace(Environment.NewLine, "</p>" + Environment.NewLine + "<p>")); 
        }
        <p>
            @body
        </p>
        <a href="@Url.ItemDisplayUrl((Orchard.ContentManagement.IContent)Model.ContentItem)" title="@T("Go to page {0}",Model.ContentItem.TitlePart.Title)" class="pull-right bluette">@T("read more")...</a>

    </div>
</div>
