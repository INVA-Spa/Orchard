@using Orchard.Environment.Configuration
@using Orchard.Autoroute.Models;
@using Laser.Orchard.CulturePicker.Services;

@{
    var settings = WorkContext.Resolve<ShellSettings>();
    var prefix = settings.RequestUrlPrefix;
}
@functions {
    // To support the layout classifaction below. Implementing as a razor function because we can, could otherwise be a Func<string[], string, string> in the code block following.
    string NormalizeUrl(string url, string prefix) {
        return url.StartsWith("~") ? Url.Content(url.StartsWith("~/" + prefix) ? url : url.Replace("~", "~/" + prefix)) : url;
    }
}
@{
    var url = Model.Href ?? "#";
    if (Model.Content != null && Model.Content.ContentItem != null && Model.Content.ContentItem.ContentType == "CategorieEventiTerm") {
        string returnUrl = "eventi";
        ILocalizableContentService _localizableContentService;
        if (WorkContext.TryResolve<ILocalizableContentService>(out _localizableContentService)){
            AutoroutePart currentRoutePart;
            //returnUrl may not correspond to any content and we use "Try" approach
            if (_localizableContentService.TryGetRouteForUrl(returnUrl, out currentRoutePart)) {
                AutoroutePart localizedRoutePart;
                //content may not have localized version and we use "Try" approach
                if (_localizableContentService.TryFindLocalizedRoute(currentRoutePart.ContentItem, WorkContext.CurrentCulture, out localizedRoutePart)) {
                    returnUrl = localizedRoutePart.Path;
                }
            }
        }
        var urlPattern = "~/" + returnUrl + "?{0}{1}termids={2}";
        url = string.Format(urlPattern,
            string.IsNullOrWhiteSpace(Request.QueryString["datainizio"]) ? "" : "datainizio=" + Request.QueryString["datainizio"] + "&",
            string.IsNullOrWhiteSpace(Request.QueryString["datafine"]) ? "" : "datafine=" + Request.QueryString["datafine"] + "&",
            Model.Content.ContentItem.Id.ToString());
        url = NormalizeUrl(url, prefix);
    }
}
@if (Model.Item.Items.Length == 0 || (Model.Parent.ContentItem != null && Model.Parent.ContentItem.ContentType != "Menu")) { 
    <a title="@T("Go to page {0}", Model.Text)" href="@url">@Model.Text</a>
} else {
    <a title="@T("Open submenu of {0}", Model.Text)" id="dLabel-@(Model.Content.Id)" data-target="#" href="@url" data-toggle="dropdown" aria-haspopup="true" role="button" aria-expanded="false">@Model.Text<span class="caret"></span></a>
}