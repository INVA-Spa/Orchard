@functions {
    // To support the layout classifaction below. Implementing as a razor function because we can, could otherwise be a Func<string[], string, string> in the code block following.
    string CalcuClassify(string[] zoneNames, string classNamePrefix) {
        var zoneCounter = 0;
        var zoneNumsFilled = string.Join("", zoneNames.Select(zoneName => { ++zoneCounter; return Model[zoneName] != null ? zoneCounter.ToString() : ""; }).ToArray());
        return HasText(zoneNumsFilled) ? classNamePrefix + zoneNumsFilled : "";
    }
}
@{
    /* Global includes for the theme moved to Document.cshtml
    ***************************************************************/


    /* Some useful shortcuts or settings
    ***************************************************************/

    Func<dynamic, dynamic> Zone = x => Display(x); // Zone as an alias for Display to help make it obvious when we're displaying zones

    /* Layout classification based on filled zones
    ***************************************************************/

    //Add classes to the wrapper div to toggle aside widget zones on and off
    var asideClass = CalcuClassify(new[] { "AsideFirst", "AsideSecond" }, "aside-"); // for aside-1, aside-2 or aside-12 if any of the aside zones are filled
    if (HasText(asideClass)) {
        Model.Classes.Add(asideClass);
    }

    //Add classes to the wrapper div to toggle tripel widget zones on and off
    var tripelClass = CalcuClassify(new[] { "TripelFirst", "TripelSecond", "TripelThird" }, "tripel-"); // for tripel-1, triple-2, etc. if any of the tripel zones are filled
    if (HasText(tripelClass)) {
        Model.Classes.Add(tripelClass);
    }

    //Add classes to the wrapper div to toggle quad widget zones on and off
    var footerQuadClass = CalcuClassify(new[] { "FooterQuadFirst", "FooterQuadSecond", "FooterQuadThird", "FooterQuadFourth" }, "split-"); // for quad-1, quad-2, etc. if any of the quad zones are filled
    if (HasText(footerQuadClass)) {
        Model.Classes.Add(footerQuadClass);
    }

    /* Inserting some ad hoc shapes
    ***************************************************************/

    //WorkContext.Layout.Header.Add(New.BadgeOfHonor(), "1"); // Login and dashboard links
    //WorkContext.Layout.Header.Add(New.User(), "2"); // Login and dashboard links
    //WorkContext.Layout.Header.Add(New.Parts_Search_SearchForm(), "10"); // Login and dashboard links


    /* Last bit of code to prep the layout wrapper
    ***************************************************************/

    Model.Id = "layout-wrapper";
    var tag = Tag(Model, "div"); // using Tag so the layout div gets the classes, id and other attributes added to the Model
}
@tag.StartElement
<!--button back top-->
<div id="back-top"><i class="fa fa-arrow-up"></i></div>
<div class="main">
    <div class="div-content">

        <div class="top_section">
            <div class="container_12">
                <div class="grid_12">

                    <div class="clear"></div>
                </div>
            </div>
        </div>

        <!--==============================header=================================-->
        <header class="content_header">
            <div class="container_12">
                <div class="grid_12">


                    <h1><a href="~/">
                        <img src="@Href(Html.ThemePath(WorkContext.CurrentTheme, "/images/logo.png"))" alt="Poker"></a></h1>
                    @if (Model.Navigation != null) {
                        <nav>
                            @Zone(Model.Navigation)
                        </nav>
                    }
                </div>
            </div>
        </header>

        <!--=======content================================-->
        @if (Model.Featured != null) {
            <div class="featured">
                @Zone(Model.Featured)
                <div class="slider_wrapper">
                    <div class="" id="camera_wrap">
                        <div data-src="images/slide1.jpg">
                        </div>
                        <div data-src="images/slide2.jpg">
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (Model.BeforeContent != null) {
            <div class="container_12">
                <div class="grid_12">
                    @Zone(Model.BeforeContent)
                </div>
            </div>
        }
        @if (Model.Messages != null) {
            <div class="container_12">
                <div class="grid_12">
                    @Zone(Model.Messages)
                </div>
            </div>
        }
        @if (Model.Content != null) {
            <div class="container_12">
                <div class="grid_12">
                    @if (Model.AsideFirst == null) {
                        @Zone(Model.Content)
                    } else if (Model.AsideFirst != null) {
                        <div class="grid_8 alpha">
                            @Zone(Model.Content)
                        </div>
                        <div class="grid_4 omega">
                            @Zone(Model.AsideFirst)
                        </div>
                    }
                </div>
            </div>
        }
        @if (Model.AfterContent != null) {
            <div class="container_12">
                <div class="grid_12">
                    @Zone(Model.AfterContent)
                </div>
            </div>
        }
@*Backgrounded contents*@

        @if (Model.BeforeBoxedContent != null || Model.BoxedContent != null || Model.BoxedAfterContent != null) {

            <div class="box-1 v2">

                @if (Model.BeforeBoxedContent != null) {
                    <div class="container_12">
                        <div class="grid_12">
                            @Zone(Model.BeforeBoxedContent)
                        </div>
                    </div>
                }
                @if (Model.BoxedContent != null) {
                    <div class="container_12">
                        <div class="grid_12">
                            @if (Model.BoxedAsideFirst == null) {
                                @Zone(Model.BoxedContent)
                            } else if (Model.BoxedAsideFirst != null) {
                                <div class="grid_8 alpha">
                                    @Zone(Model.BoxedContent)
                                </div>
                                <div class="grid_4 omega">
                                    @Zone(Model.BoxedAsideFirst)
                                </div>
                            }
                        </div>
                    </div>
                }
                @if (Model.BoxedAfterContent != null) {
                    <div class="container_12">
                        <div class="grid_12">
                            @Zone(Model.BoxedAfterContent)
                        </div>
                    </div>
                }
            </div>
        }

    </div>

</div>




<!--=======footer=================================-->
<footer>
    <div class="footer_section1">
        <div class="container_12">
            <div class="grid_12">

                <div class="grid_4 alpha">
                    @if (Model.TripelFirst != null) {
                        @Zone(Model.TripelFirst)
                    }
                </div>

                <div class="grid_5">
                    @if (Model.TripelSecond != null) {
                        <blockquote>
                            @Zone(Model.TripelSecond)
                        </blockquote>

                    }

@*                    <h3>Testimonials</h3>
                    <blockquote>
                        <p class="bq_txt1">“Fusce euismod consequat ante. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Pellentesque sed dolor. Aliquam congue fermentum nisl. Mauris accumsan nulla vel diam. Sed in lacus ut enim adipiscing aliquet.”</p>
                        <p><a href="#">Adam Donovan</a></p>
                    </blockquote>

                    <div class="hline3"></div>
                    <div class="clear"></div>

                    <blockquote class="marTop2">
                        <p class="bq_txt1">“Fusce euismod consequat ante. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Pellentesque sed dolor. Aliquam congue fermentum nisl. Mauris accumsan nulla vel diam. Sed in lacus ut enim adipiscing aliquet.”</p>
                        <p><a href="#">Sara Tomson</a></p>
                    </blockquote>*@
                </div>

                <div class="grid_3 omega">
                    <div class="pad_left1">

                        @if (Model.TripelThird != null) {
                            @Zone(Model.TripelThird)
                        }

@*                        <h3>Social</h3>
                        <ul class="soc_icons">
                            <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                            <li><a href="#"><i class="fa fa-google-plus"></i></a></li>
                            <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                            <li><a href="#"><i class="fa fa-skype"></i></a></li>
                        </ul>

                        <h3>contact us</h3>
                        <p>
                            8901 Marmora Road,<br>
                            Glasgow, D04 89GR.<br>
                            Telephone:  +1 800 603 6035<br>
                            E-mail: <a href="#" class="link2">mail@demolink.org</a>
                        </p>*@
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="footer_section2">
        <div class="container_12">
            <div class="grid_12">
                <p class="txt_priv">
                    Baro Germano & Figli s.r.l. &copy; <span id="copyright-year"></span> All Rights Reserved   |   Designed by <a href="http://www.laser-group.com" target="_blank">Laser s.r.l.</a><br>
                    <!--{%FOOTER_LINK} -->
                </p>
            </div>
        </div>
    </div>


</footer>
@tag.EndElement






