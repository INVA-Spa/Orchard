@using Orchard.ContentManagement
@using Orchard.Core.Contents
@using Orchard.Utility.Extensions
@using Orchard.MediaLibrary.Fields
@{
    foreach (var item in Model.ContentItems.Items) {
        ContentItem contentItem = item.ContentItem;
            <div class="summary" itemscope="itemscope" itemid="@contentItem.Id" itemtype="http://orchardproject.net/data/ContentItem">
                <input type="checkbox" class="content-picker-itemCheck" />
                <div class="content-picker-item">
                    <div class="properties">
                        @*<input type="checkbox" value="@contentItem.Id" name="itemIds"/>*@
                        <h3>@Html.ItemDisplayText(contentItem)</h3> - <div class="contentType">@contentItem.TypeDefinition.DisplayName</div>
                        @if (Model.Header != null) {
                            <div class="header">@Display(Model.Header)</div>
                        }
                        @if (Model.Meta != null) {
                            <div class="metadata">@Display(Model.Meta)</div>
                        }
                    </div>


@{
    var field = (MediaLibraryPickerField)(((dynamic)contentItem).Product.ProductImage);
    string displayName = field.DisplayName;
    string name = field.Name;
    var contents = field.MediaParts;
    var allUrls = contents.Select(mp => mp.MediaUrl).ToList();
}
@*<section class="media-library-picker-field media-library-picker-field-@name.HtmlClassify()">
        <h3>@displayName</h3>
        @foreach (var content in contents) {
            <div>
                @Display(BuildDisplay(content, "Summary"))
            </div>
        }
    </section>*@

<div class="col-md-4 single-left">
    <div class="flexslider">
        <ul class="slides">
            @foreach (var url in allUrls) {
                <li data-thumb="@Display.ResizeMediaUrl(Width: 255, Height: 340, Mode: "pad", Alignment: "middlecenter", Path: url)">
                    <div class="thumb-image">
                        <img src="@url" data-imagezoom="true" class="img-responsive" />
                    </div>
                </li>
            }
        </ul>
    </div>
    @{
        Script.Include("jquery.flexslider.js", "jquery.flexslider.min.js");
        Style.Include("flexslider.css", "flexslider.min.css");
    }
    <script>
        $(window).load(function () {
            $('.flexslider').flexslider({
                animation: "slide",
                controlNav: "thumbnails"
            });
        });
    </script>
    @{
        Script.Include("imagezoom.js", "imagezoom.min.js");
    }
</div>

                    <div class="related"
                         data-display-text="@Html.ItemDisplayText(contentItem)"
                         data-id="@contentItem.Id"
                         data-edit-link="@Html.Encode(Html.ItemEditLink(contentItem))"
                         data-edit-url="@Html.Encode(Url.ItemEditUrl(contentItem))"
                         data-admin-url="@Html.Encode(Url.ItemAdminUrl(contentItem))"
                         data-display-link="@Html.Encode(Html.ItemDisplayLink(contentItem))"
                         data-published="@contentItem.VersionRecord.Published.ToString().ToLower()">

                        @Html.Link(T("Select").Text, "#", new { @class = "button select" })
                     </div>
                    @if (Model.Content != null) {

                        <div class="primary">@Display(Model.Content)</div>
                    }
                </div>
            </div>


        @*// ContentItem contentItem =  Model.ContentItems.Items[0].ContentItem;
        var returnUrl = ViewContext.RequestContext.HttpContext.Request.ToUrlString();

        <div class="summary" itemscope="itemscope" itemid="@contentItem.Id" itemtype="http://orchardproject.net/data/ContentItem">
            <div class="properties">
                <input type="checkbox" value="@contentItem.Id" name="itemIds" />
                <h3>@Html.ItemAdminLink(contentItem)</h3>
                -
                <div class="contentType">@contentItem.TypeDefinition.DisplayName</div>
                @if (Model.Header != null) {
                    <div class="header">@Display(Model.Header)</div>
                }
                @if (Model.Meta != null) {
                    <div class="metadata">@Display(Model.Meta)</div>
                }
            </div>
            @if (Model.DetailInfos != null) {
                <div class="infos">@Display(Model.DetailInfos)</div>
            }


            <div class="related">
                @Display(Model.Actions)
                @if (Authorizer.Authorize(Permissions.EditContent, contentItem)) {
                    @Html.ItemEditLink(T("Edit").Text, contentItem)@T(" | ")
                }
                @if (Authorizer.Authorize(Permissions.DeleteContent, contentItem)) {
                    @Html.Link(T("Delete").Text, Url.ItemRemoveUrl(contentItem, new { returnUrl }), new { itemprop = "RemoveUrl UnsafeUrl" })
                }
            </div>
            @if (Model.Content != null) {
                <div class="list-more-info"><a role="button" data-toggle="collapse" href="#collapselist-@contentItem.Id" aria-expanded="false" aria-controls="collapselist-@contentItem.Id">+ @T("More info")</a></div>
                <div id="collapselist-@contentItem.Id" class="collapse">
                    <div class="primary">@Display(Model.Content)</div>
                </div>
            }

        </div>
    }*@
}}