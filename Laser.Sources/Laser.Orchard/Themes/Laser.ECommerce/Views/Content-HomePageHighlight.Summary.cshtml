@using Orchard.Fields.Fields
@using Orchard.ContentManagement
@using Orchard.Utility.Extensions;
@{
    if (Model.Title != null) {
        Layout.Title = Model.Title;
    }

    Model.Classes.Add("content-item");

    var contentTypeClassName = ((string)Model.ContentItem.ContentType).HtmlClassify();
    Model.Classes.Add(contentTypeClassName);

    var tag = Tag(Model, "article");

    var contentItem = (ContentItem)Model.ContentItem;

    var displayType = (contentItem.Parts
        .SelectMany(pa => pa.Fields)
        .Where(fi => fi is EnumerationField && fi.Name == "DisplayStyle")
        .FirstOrDefault() as EnumerationField)
        .Value;

    var displayMap = new Dictionary<string, Func<ContentItem, dynamic>>() {
        {"Banner", (ci) => Display.HomePageHighlightBanner(ContentItem: ci) },
        {"Zoom", (ci) => Display.HomePageHighlightZoom(ContentItem: ci) },
        {"Simple", (ci) => Display.HomePageHighlightSimple(ContentItem: ci) },
        {"Review", (ci) => Display.HomePageHighlightReview(ContentItem: ci) }
    };
}
@if (displayMap.ContainsKey(displayType)) {
    @tag.StartElement
    @displayMap[displayType](contentItem)
    @tag.EndElement
}
