@using System.Globalization
@{
    var translatedCultures = Model.TranslatedCultures as IList<Laser.Orchard.CulturePicker.Models.ExtendedCultureRecord>;
    if (Model.ShowOnlyPertinentCultures && translatedCultures.Count(p => p.Equals(Model.UserCulture)) == 0) { translatedCultures.Insert(0, Model.UserCulture); }
    var availableCultures = (Model.ShowOnlyPertinentCultures) ? translatedCultures : Model.AvailableCultures;
    var availableCultureswithNames = new List<KeyValuePair<string, string>>(availableCultures.Count);
    foreach (Laser.Orchard.CulturePicker.Models.ExtendedCultureRecord culture in availableCultures) {
        try {
            var cultureInfo = new CultureInfo(culture.CultureCode);
            var displayedName = String.IsNullOrEmpty(culture.DisplayName) ? cultureInfo.NativeName : culture.DisplayName;
            availableCultureswithNames.Add(new KeyValuePair<string, string>(culture.CultureCode, displayedName));
        } catch {
            availableCultureswithNames.Add(new KeyValuePair<string, string>(culture.CultureCode, culture.CultureCode));
        }
    }
}

@{
    <div class="culturepicker-wrapper">
        <div class="culturepicker-inner">
            @foreach (var item in availableCultureswithNames) {
                <a class="flag-@item.Key.ToString()" href="@Url.Action("ChangeCulture", "UserCulture", new { Area = "Laser.Orchard.CulturePicker", CultureName = item.Key })">
                    @item.Value
                </a>
            }
        </div>
    </div>
}